pipeline {
  agent any
  options { timestamps() }

  environment {
    APP_HOST    = '54.198.173.58'          // <-- CHANGE to your app node IP
    REMOTE_USER = 'ubuntu'                 // default for Ubuntu on AWS
    SSH_KEY     = '/var/lib/jenkins/.ssh/app.pem'
    WAR_NAME    = 'hello.war'              // <-- CHANGE if your WAR is named differently
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sh 'set -eu; echo "Workspace: $(pwd)"; ls -la'
      }
    }

    stage('Build WAR') {
      steps {
        sh '''
          set -eu
          mvn -B -DskipTests clean package
          echo "Built artifacts:"; ls -l target/
          test -f "target/${WAR_NAME}" || { echo "Expected target/${WAR_NAME} not found"; exit 1; }
        '''
      }
    }

    stage('Copy WAR to app node') {
      steps {
        sh '''
          set -eu
          test -f "${SSH_KEY}" || { echo "SSH key not found at ${SSH_KEY}"; exit 1; }
          chmod 600 "${SSH_KEY}"
          scp -i "${SSH_KEY}" -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
            "target/${WAR_NAME}" "${REMOTE_USER}@${APP_HOST}:/tmp/ROOT.war"
        '''
      }
    }

    stage('Deploy on app node & restart Tomcat') {
      steps {
        sh '''
          set -eu
          ssh -i "${SSH_KEY}" -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
            "${REMOTE_USER}@${APP_HOST}" <<'REMOTE'
set -eu

# Detect OS and ensure Tomcat is installed
if [ -f /etc/os-release ]; then
  . /etc/os-release
else
  ID=""
fi

SERVICE=""
WEBAPPS=""
GROUP="tomcat"
USER="tomcat"

case "$ID" in
  ubuntu|debian)
    # Install Tomcat 9 if missing
    if ! command -v systemctl >/dev/null 2>&1 || ! systemctl list-unit-files | grep -q '^tomcat9\\.service'; then
      sudo apt-get update -y
      sudo apt-get install -y tomcat9 curl
    else
      sudo apt-get install -y curl || true
    fi
    SERVICE="tomcat9"
    WEBAPPS="/var/lib/tomcat9/webapps"
    USER="tomcat"
    GROUP="tomcat"
    ;;
  amzn|rhel|centos|rocky|almalinux|fedora)
    # Install Tomcat (package name is 'tomcat')
    if ! command -v systemctl >/dev/null 2>&1 || ! systemctl list-unit-files | grep -q '^tomcat\\.service'; then
      if command -v dnf >/dev/null 2>&1; then
        sudo dnf install -y tomcat curl
      else
        sudo yum install -y tomcat curl
      fi
    else
      (command -v dnf >/dev/null 2>&1 && sudo dnf install -y curl) || sudo yum install -y curl || true
    fi
    SERVICE="tomcat"
    WEBAPPS="/var/lib/tomcat/webapps"
    USER="tomcat"
    GROUP="tomcat"
    ;;
  *)
    # Fallback: try Ubuntu defaults
    if ! systemctl list-unit-files | grep -q '^tomcat9\\.service'; then
      sudo apt-get update -y
      sudo apt-get install -y tomcat9 curl
    fi
    SERVICE="tomcat9"
    WEBAPPS="/var/lib/tomcat9/webapps"
    USER="tomcat"
    GROUP="tomcat"
    ;;
esac

# Ensure webapps dir exists
sudo mkdir -p "$WEBAPPS"

# Stop Tomcat if running
sudo systemctl stop "$SERVICE" || true

# Clean old ROOT and deploy new WAR as ROOT.war
sudo rm -rf "$WEBAPPS/ROOT" "$WEBAPPS/ROOT.war" || true
sudo mv /tmp/ROOT.war "$WEBAPPS/ROOT.war"
sudo chown "$USER:$GROUP" "$WEBAPPS/ROOT.war"

# Start Tomcat and wait a bit
sudo systemctl start "$SERVICE"
sudo systemctl is-active "$SERVICE"
sleep 8

# Quick local health check on the node (optional)
curl -fsS http://localhost:8080/ >/dev/null || { echo "Local curl failed"; exit 1; }
REMOTE
        '''
      }
    }

    stage('Smoke test from Jenkins') {
      steps {
        sh '''
          set -eu
          # Try up to ~30s for Tomcat to explode the WAR
          for i in $(seq 1 10); do
            if curl -fsS "http://${APP_HOST}:8080/" >/dev/null; then
              echo "Smoke test OK"
              exit 0
            fi
            echo "Waiting for app... ($i/10)"
            sleep 3
          done
          echo "Smoke test FAILED"
          exit 1
        '''
      }
    }
  }

  post {
    success { echo '✅ Deployed successfully. Visit: http://' + env.APP_HOST + ':8080/' }
    failure { echo '❌ Deployment failed. Check the first error above.' }
  }
}
