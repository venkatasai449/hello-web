pipeline {
  agent any
  options { timestamps() }

  // üîß EDIT THESE FOUR VALUES
  environment {
    APP_HOST   = '35.89.163.155'          // e.g. 54.190.187.171
    APP_USER   = 'ubuntu'                           // e.g. ubuntu for AWS Ubuntu
    SSH_KEY    = '/var/lib/jenkins/.ssh/app.pem'    // private key path on Jenkins box
    CONTEXT    = 'addressbook'                            // URL context: http://IP:8080/hello/
    WAR_NAME   = 'addressbook.war'                        // produced by your pom.xml
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
        sh 'pwd && ls -la'
      }
    }

    stage('Build WAR') {
      steps {
        // Requires Java + Maven on the Jenkins agent
        sh 'mvn -B -DskipTests clean package'
        sh 'ls -l target'
      }
    }

    stage('Copy WAR to app node') {
      steps {
        sh '''
          set -eux
          test -f "$SSH_KEY"
          chmod 600 "$SSH_KEY"
          scp -i "$SSH_KEY" -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
              "target/$WAR_NAME" "$APP_USER@$APP_HOST:/tmp/$WAR_NAME"
        '''
      }
    }

    stage('Deploy & Restart Tomcat') {
      steps {
        sh '''
          set -eux
          ssh -i "$SSH_KEY" -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null "$APP_USER@$APP_HOST" '
            set -eux

            # Detect webapps dir (Ubuntu package vs custom install)
            if [ -d /var/lib/tomcat9/webapps ]; then
              WEBAPPS=/var/lib/tomcat9/webapps
              SVC=tomcat9
            elif [ -d /var/lib/tomcat/webapps ]; then
              WEBAPPS=/var/lib/tomcat/webapps
              SVC=tomcat
            elif [ -d /opt/tomcat/webapps ]; then
              WEBAPPS=/opt/tomcat/webapps
              SVC=tomcat
            else
              echo "ERROR: Could not find Tomcat webapps directory." >&2
              exit 1
            fi

            # Stop (ignore if not running)
            sudo systemctl stop "$SVC" || true

            # Clean old deployment
            sudo rm -rf "$WEBAPPS/$CONTEXT" "$WEBAPPS/$CONTEXT.war" || true

            # Move new WAR in place
            sudo mv "/tmp/$WAR_NAME" "$WEBAPPS/$CONTEXT.war" || { echo "Move failed"; exit 1; }

            # Fix ownership if tomcat user exists
            if id tomcat >/dev/null 2>&1; then
              sudo chown tomcat:tomcat "$WEBAPPS/$CONTEXT.war"
            elif id tomcat9 >/dev/null 2>&1; then
              sudo chown tomcat9:tomcat9 "$WEBAPPS/$CONTEXT.war"
            fi

            # Start Tomcat and wait a bit for auto-deploy
            sudo systemctl start "$SVC"
            sudo systemctl is-active "$SVC"
            sleep 6
          '
        '''
      }
    }

    stage('Smoke test') {
      steps {
        sh '''
          set -eux
          # Try /context and /context/ (some apps need trailing slash)
          curl -fsS "http://$APP_HOST:8080/$CONTEXT"       || true
          curl -fsS "http://$APP_HOST:8080/$CONTEXT/"      || true
          echo "‚úÖ Deployed to: http://$APP_HOST:8080/$CONTEXT/"
        '''
      }
    }
  }

  post {
    failure {
      echo "‚ùå Deployment failed. Check the stage logs above."
    }
  }
}
